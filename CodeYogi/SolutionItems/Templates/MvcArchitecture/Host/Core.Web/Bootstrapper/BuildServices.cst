<%@ CodeTemplate Language="C#" %>
<%@ ReferenceAssembly Path="System.dll" %>
<%@ ReferenceAssembly Path="System.Data.dll" %>
<%@ ReferenceAssembly Path="DatabaseCatalogReader.dll" %>
<%@ Import Namespace="System" %>
<%@ Import Namespace="System.Text" %>
<%@ Import Namespace="DatabaseCatalogReader" %>
<%@ Import Namespace="System.Data" %>
<%

   SqlTable cat = new SqlTable();
    if(!cat.IsConnected())
        throw new ApplicationException("No connection to database");
%>
<%
string newline = "\n\t\t\t";
string regTypesInIOC = string.Empty;

foreach(SqlTable table in cat.GetSqlTables()){
    
    regTypesInIOC += "builder.RegisterType<"+table.Name+"Client>().As<I"+table.Name+"Service>();"+newline;
    
}
%>
using Autofac;
using Autofac.Integration.Mvc;
using Client.Proxies;
using Client.Contracts;

namespace Core.Web
{
    public static class Bootstrapper
    {/// <summary>
        /// Configures and builds Autofac IOC container.
        /// </summary>
        /// <returns></returns>
        public static IContainer BuildContainer()
        {
            var builder = new ContainerBuilder();
            
            //register controller
            builder.RegisterControllers(typeof(MvcApplication).Assembly);

            // register types
            <%= regTypesInIOC %>

            // build container
            return builder.Build();
        }
    }
}